- name: geosync deployment
  hosts: my_georchestra_host
  sudo: yes
  roles:
    - geosync
  vars:
    owncloud: {
      fqdn: my_owncloud_server.my-organisation.org,
      user: owncloud_user,
      passwd: owncloud_password,
    }
    georchestra: {
      fqdn: my_georchestra_server.my-organisation.org,
      url: "https://my_georchestra_server.my-organisation.org",
      user: {
        open: {
          uid: 998,
          name: georchestra-ouvert,
          passwd: georchestra-ouvert_password,
          file: open-user.ldif,
          groups: open-user-groups.ldif,
          workspace: geosync-ouvert,
          datastore: geosync_shp_open, # Attention !!! ne pas finir le nom par "shp" sinon créer un datastore pour 1 seul shapefile
          pg_datastore: geosync_pg_open,
          db: geosync_data_open,
          logs: geosync-open,
        },
        rsct: {
          uid: 997,
          name: georchestra-restreint,
          passwd: georchestra-restreint_password,
          file: rsct-user.ldif,
          groups: rsct-user-groups.ldif,
          workspace: geosync-restreint,
          datastore: geosync_shp_rsct,
          pg_datastore: geosync_pg_rsct,
          db: geosync_data_rsct,
          logs: geosync-rsct,
        }
      }
    }
    openldap: {
      basedn: "dc=georchestra,dc=my-organisation,dc=org",
      rootdn: "cn=admin,dc=my-organisation,dc=org",
      rootpw: secret,
    }
    openldap_adminemail: admin@my-organisation.org,
    geoserver: {
      datadir: /opt/data/geoserver/,
      workspace: geosync,
      datastore: shpowncloud, # Attention !!! ne pas finir le nom par "shp" sinon créer un datastore pour 1 seul shapefile
      pg_datastore: postgis_data,
      db: {
        name: geoserver_data,
        user: geosync,
        pass: secret,
      }
    }
    git: {
      branch: master,
      user : {
        name: my_github_user,
        email: my_github_user@my-organisation.org,
      }
    }
    my_networks: {
      net1: 192.168.1.0/24,
      net2: 192.168.2.0/24,
    }
