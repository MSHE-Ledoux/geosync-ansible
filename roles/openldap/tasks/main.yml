- name: create LDAP /tmp directory
  file: path=/tmp/LDAP state=directory owner=tomcat8 group=tomcat8 mode=0755

- name: template geo_open_user.ldif
  template: src=geo_open_user.ldif.j2 dest=/tmp/LDAP/geo_open_user.ldif

- name: check if the {{ geo_open_user }} user already exists
  command: ldapsearch -x -b {{ openldap_basedn }} uid={{ geo_open_user }}
  ignore_errors: true
  register: test_geo_open_user

- name: slapadd geo_open_user.ldif
  command: ldapadd -f /tmp/LDAP/geo_open_user.ldif -D {{ openldap_rootdn }} -w {{ openldap_rootpw }}
  when: "test_geo_open_user.stdout is defined and '# numEntries: 1' not in test_geo_open_user.stdout"
# en cas d'erreur, le supprimer à la main
# ldapdelete 'uid=georchestra-ouvert,ou=users,dc=georchestra,dc=univ-fcomte,dc=fr' -D cn=admin,dc=georchestra,dc=univ-fcomte,dc=fr -W

- name: template geo_open_user_groupes.ldif
  template: src=geo_open_user_groupes.ldif.j2 dest=/tmp/LDAP/geo_open_user_groupes.ldif
  when: "test_geo_open_user.stdout is defined and '# numEntries: 1' not in test_geo_open_user.stdout"

- name: ldapmodify
  command: ldapmodify -f /tmp/LDAP/geo_open_user_groupes.ldif -D {{ openldap_rootdn }} -w {{ openldap_rootpw }}
  when: "test_geo_open_user.stdout is defined and '# numEntries: 1' not in test_geo_open_user.stdout"

- name: installing python-ldap
  apt: pkg=python-ldap state=installed update_cache=yes

          fichier modifié...
