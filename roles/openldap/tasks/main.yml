- name: create LDAP /tmp directory
  file: path=/tmp/LDAP state=directory owner=tomcat8 group=tomcat8 mode=0755

- name: template georchestra-xxxx.ldif
  #debug: msg="user {{ item.key }} is {{ item.value.name }} - file is {{ item.value.file }}"
  template: src={{ item.value.file }}.j2 dest=/tmp/LDAP/{{ item.value.file }}
  with_dict: georchestra.user

- name: check if georchestra.xxxx_user users already exist
  command: ldapsearch -x -b {{ openldap.basedn }} uid={{ item.value.name }}
  ignore_errors: true
  register: tests_ldap
  with_dict: georchestra.user

- debug: var="{{item}}"
  with_items: tests_ldap.results

- debug: msg="item.stdout={{item.stdout}}, item.changed={{item.changed}}"
  with_items: tests_ldap.results

- name: slapadd georchestra.xxxx_user
  command: ldapadd -f /tmp/LDAP/{{item.item.value.file}} -D {{ openldap.rootdn }} -w {{ openldap.rootpw }}
  when: "item.stdout is defined and '# numEntries: 1' not in item.stdout"
  with_items: tests_ldap.results

- name: template georchestra.xxxx_groupes.ldif
  template: src={{item.item.value.groups}}.j2 dest=/tmp/LDAP/{{item.item.value.groups}}.ldif
  when: "item.stdout is defined and '# numEntries: 1' not in item.stdout"
  with_items: tests_ldap.results

- name: add georchestra.xxxx to admin georchestra groups
  command: ldapmodify -f /tmp/LDAP/{{item.item.value.groups}}.ldif -D {{ openldap.rootdn }} -w {{ openldap.rootpw }}
  when: "item.stdout is defined and '# numEntries: 1' not in item.stdout"
  with_items: tests_ldap.results

- name: installing python-ldap
  apt: pkg=python-ldap state=installed update_cache=yes

