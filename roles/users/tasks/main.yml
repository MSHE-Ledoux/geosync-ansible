# creation du groupe georchestra
- name: test if georchestra group exists
  shell: cat /etc/group
  register: etc_group

- name: create georchestra group
  group: name=georchestra state=present gid=999
  when: "'georchestra' not in etc_group.stdout"

# creation de l'utilisateur georchestra
- name: create georchestra user
  user: name=georchestra comment=georchestra uid=999 group=georchestra shell=/bin/bash

# creation des utilisateurs georchestra.user.xxxx
- name: create georchestra.user.xxxx user
  user: name={{ item.value.name }} comment={{ item.value.name }} uid={{ item.value.uid }} group=georchestra shell=/bin/bash
  with_dict: georchestra.user

# le fichier .pgpass permet à georchestra.user.xxxx de se connecter sur la base georchestra.user.xxxx.db
- name: template pgpass for georchestra.user.xxxx user
  template: src=pgpass.j2 
            dest=/home/{{ item.value.name }}/.pgpass
            owner={{ item.value.name }} group=georchestra mode=0600  
  with_dict: georchestra.user

# /home/georchestra.open_user/.ssh contient les clés publique et privée
- name: create .ssh directory
  file: path=/home/{{ item.value.name }}/.ssh state=directory owner={{ item.value.name }} group=georchestra mode=0755
  with_dict: georchestra.user

# copie des clés de l'utilisateur georchestra.user.xxxx
- name: copy id_rsa.pub in .ssh directrory
  copy: src=/home/echiarello/certificats/georchestra-ouvert/id_rsa.pub 
        dest=/home/{{ item.value.name }}/.ssh/id_rsa.pub 
        owner={{ item.value.name }} group=georchestra mode=0644
  with_dict: georchestra.user

- name: copy id_rsa in .ssh directrory
  copy: src=/home/echiarello/certificats/georchestra-ouvert/id_rsa
        dest=/home/{{ item.value.name }}/.ssh/id_rsa
        owner={{ item.value.name }} group=georchestra mode=0600
  with_dict: georchestra.user

# configurer github pour georchestra.user.xxxx
- name: template .gitconfig
  template: src=gitconfig.j2 dest=/home/{{ item.value.name }}/.gitconfig
  with_dict: georchestra.user

# script pour remplacer https par ssh pour les connexions vers github
# sera exécuté dans roles/geosync/tasks/main.yml
- name: template git_seturl.sh
  template: src=git_seturl.sh.j2 
            dest=/home/{{ item.value.name }}/git_seturl.sh 
            owner={{ item.value.name }} group=georchestra mode=0755
  with_dict: georchestra.user

# création du répertoire /home/georchestra.user.xxxx/owncloud
- name: create owncloud directory
  file: path=/home/{{ item.value.name }}/owncloud 
        state=directory 
        owner={{ item.value.name }} group=georchestra mode=0755
  with_dict: georchestra.user

# création du répertoire /home/georchestra.open_user/tmp
- name: create tmp directory
  file: path=/home/{{ item.value.name }}/tmp state=directory owner={{ item.value.name }} group=georchestra mode=0755
  with_dict: georchestra.user

# installation de owslib
- name: installing python-dev
  apt: pkg=python-dev state=installed update_cache=yes

- name: installing python-pip
  apt: pkg=python-pip state=installed update_cache=yes

- name: installing owslib
  pip: name=owslib state=latest

